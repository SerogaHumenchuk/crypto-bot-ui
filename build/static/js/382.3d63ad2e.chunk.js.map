{"version":3,"file":"static/js/382.3d63ad2e.chunk.js","mappings":"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","sources":["modules/CoinsPrices/selectors/index.js","components/ScannerTable/index.js","App.jsx"],"sourcesContent":["import * as R from \"ramda\";\nexport const coinPricesSelector = R.pathOr({}, [\"coinPrices\", \"prices\"]);\nexport const exchangersSelector = R.pathOr([], [\"coinPrices\", \"exchangers\"]);\n","import { useSelector } from \"react-redux\";\nimport * as React from \"react\";\nimport moment from \"moment\";\nimport * as R from \"ramda\";\nimport classNames from \"classnames\";\nimport Collapse from \"@mui/material/Collapse\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport {\n  coinPricesSelector,\n  exchangersSelector,\n} from \"../../modules/CoinsPrices/selectors\";\nimport \"./styles.scss\";\n\nexport const ScannerTableRow = ({ pair, prices }) => {\n  const exchangers = useSelector(exchangersSelector);\n  const [open, setOpen] = React.useState(false);\n  if (R.isEmpty(prices)) {\n    return null;\n  }\n  const lastPrices = R.pathOr({}, [0])(prices);\n\n  return (\n    <React.Fragment>\n      <TableRow sx={{ \"& > *\": { borderBottom: \"unset\" } }}>\n        <TableCell className=\"cell\">\n          <span className=\"bold\">{pair}</span>\n          <IconButton onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        {exchangers.map((exchanger) => {\n          const { buy = \"\", sell = \"\" } = lastPrices[exchanger];\n          return (\n            <TableCell\n              className={classNames({\n                cell: true,\n                bgGreen: lastPrices.minBuyPrice === buy,\n                bgRed: lastPrices.maxSellPrice === sell,\n              })}\n              key={exchanger}\n            >\n              <span className=\"greenColor\">{buy}</span>\n              <span>{\" / \"}</span>\n              <span className=\"redColor\">{sell}</span>\n            </TableCell>\n          );\n        })}\n      </TableRow>\n      <TableRow>\n        <TableCell colSpan={exchangers.length + 1} className=\"full-table-cell\">\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Table size=\"small\" aria-label=\"purchases\">\n              <TableBody>\n                {prices.map((pairPrices) => (\n                  <TableRow>\n                    <TableCell className=\"cell\">\n                      {moment(pairPrices.date).format(\"LTS\")}\n                    </TableCell>\n                    {exchangers.map((exchanger) => {\n                      const { buy = \"\", sell = \"\" } = pairPrices[exchanger];\n                      return (\n                        <TableCell\n                          className={classNames({\n                            cell: true,\n                            bgGreen: pairPrices.minBuyPrice === buy,\n                            bgRed: pairPrices.maxSellPrice === sell,\n                          })}\n                          key={exchanger}\n                        >\n                          <span className=\"greenColor\">{buy}</span>\n                          <span>{\" / \"}</span>\n                          <span className=\"redColor\">{sell}</span>\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n};\n\nexport const ScannerTable = () => {\n  const coinsPrices = useSelector(coinPricesSelector);\n  const exchangers = useSelector(exchangersSelector);\n\n  return (\n    <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\n      <TableContainer sx={{ maxHeight: \"calc(100vh - 2rem)\" }}>\n        <Table stickyHeader>\n          <TableHead>\n            <TableRow>\n              <TableCell className=\"cell\" />\n              {exchangers.map((exchanger) => (\n                <TableCell key={exchanger}>\n                  <span className=\"bold\">{exchanger}</span>\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {Object.entries(coinsPrices).map(([pair, prices]) => (\n              <React.Fragment key={pair}>\n                <ScannerTableRow pair={pair} prices={prices} />\n              </React.Fragment>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { ScannerTable } from \"./components/ScannerTable\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ScannerTable />\n    </div>\n  );\n}\n\nexport default App;\n"],"names":["coinPricesSelector","R","exchangersSelector","ScannerTableRow","_ref","pair","prices","exchangers","useSelector","_React$useState","React","_React$useState2","_slicedToArray","open","setOpen","lastPrices","_jsxs","children","TableRow","sx","borderBottom","TableCell","className","_jsx","IconButton","onClick","KeyboardArrowUpIcon","KeyboardArrowDownIcon","map","exchanger","_lastPrices$exchanger","_lastPrices$exchanger2","buy","_lastPrices$exchanger3","sell","classNames","cell","bgGreen","minBuyPrice","bgRed","maxSellPrice","colSpan","length","Collapse","in","timeout","unmountOnExit","Table","size","TableBody","pairPrices","moment","date","format","_pairPrices$exchanger","_pairPrices$exchanger2","_pairPrices$exchanger3","ScannerTable","coinsPrices","Paper","width","overflow","TableContainer","maxHeight","stickyHeader","TableHead","Object","entries","_ref2","_ref3"],"sourceRoot":""}